package keystrokesmod.module.impl.exploit.antifalseflag;

import keystrokesmod.event.PushOutOfBlockEvent;
import keystrokesmod.module.impl.exploit.AntiFalseFlag;
import keystrokesmod.module.impl.other.SlotHandler;
import keystrokesmod.module.setting.impl.ButtonSetting;
import keystrokesmod.module.setting.impl.ModeSetting;
import keystrokesmod.module.setting.impl.SubMode;
import keystrokesmod.utility.BlockUtils;
import keystrokesmod.utility.MoveUtil;
import net.minecraft.block.state.IBlockState;
import net.minecraft.item.ItemSword;
import net.minecraft.util.BlockPos;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import org.jetbrains.annotations.NotNull;

public class HypixelAntiFalseFlag extends SubMode<AntiFalseFlag> {
    private final ModeSetting whenFalseFlag;
    private final ButtonSetting phase;
    private final ButtonSetting noSlow;
    private final ButtonSetting snowLayer;
    private final ButtonSetting reach;
    private final ButtonSetting velocityCactus;

    public HypixelAntiFalseFlag(String name, @NotNull AntiFalseFlag parent) {
        super(name, parent);
        this.registerSetting(whenFalseFlag = new ModeSetting("When false flag", new String[]{"Passive", "Active"}, 0));
        this.registerSetting(phase = new ButtonSetting("Phase", true));
        this.registerSetting(noSlow = new ButtonSetting("NoSlow", false));
        this.registerSetting(snowLayer = new ButtonSetting("Snow layer", true));
        this.registerSetting(reach = new ButtonSetting("Reach", true));
        this.registerSetting(velocityCactus = new ButtonSetting("Velocity (cactus)", true));
    }

    @SubscribeEvent
    public void onPushOutOfBlock(@NotNull PushOutOfBlockEvent event) {
        if (!phase.isToggled()) return;

        final BlockPos groundPos = new BlockPos(mc.thePlayer).down();
        final IBlockState groundState = BlockUtils.getBlockState(groundPos);

        if (groundState == null || groundState.getBlock().isCollidable() || !mc.thePlayer.onGround) {
            return;
        }

        // if the side to push is air, then watchdog will flag you.
        BlockPos pushTo = event.getDirection().offsetWith(groundPos);
        if (BlockUtils.getBlockState(pushTo) == null) {
            parent.flag("Phase", String.format("Break blocks or place a block at (%s,%s,%s)", pushTo.getX(), pushTo.getY(), pushTo.getZ()));
            if ((int) whenFalseFlag.getInput() == 1) {
                event.setCanceled(true);
            }
        }
    }

    @Override
    public void onUpdate() throws Exception {
        if (noSlow.isToggled()) {
            if (mc.thePlayer.onGround || !mc.thePlayer.isUsingItem() || SlotHandler.getHeldItem() == null || !(SlotHandler.getHeldItem().getItem() instanceof ItemSword)) {
                return;
            }

            // watchdog noSlow hard check
            // todo check if it's about offGroundTicks or something else
            final double speed = MoveUtil.speed();
            if (speed > 0.25)
                parent.flag("NoSlow", "Speed limit: " + speed);
        }
    }

//    /**
//     * debug
//     */
//    @SubscribeEvent
//    public void onSendPacket(@NotNull SendPacketEvent event) {
//        if (event.getPacket() instanceof C08PacketPlayerBlockPlacement) {
//            Utils.sendMessage("Speed:" + MoveUtil.speed() + "  MotionY:" + mc.thePlayer.motionY);
//        }
//    }
}
